version: '3.8'

services:
  thought-chat-app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    networks:
      - thought-chat-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.thought-chat.rule=Host(`your-domain.com`)"
      - "traefik.http.routers.thought-chat.tls.certresolver=letsencrypt"

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-thoughtchat123}
    volumes:
      - redis_data:/data
    networks:
      - thought-chat-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=thoughtchat
      - POSTGRES_USER=thoughtchat
      - POSTGRES_PASSWORD=${DB_PASSWORD:-thoughtchat123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - thought-chat-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - thought-chat-app
    networks:
      - thought-chat-network
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  thought-chat-network:
    driver: bridge